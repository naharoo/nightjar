<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.0.RELEASE</version>
    </parent>

    <groupId>eu.navads.nightjar</groupId>
    <artifactId>navads-nightjar</artifactId>
    <version>0.1.0</version>

    <name>navads-nightjar</name>
    <description>Navads Script Execution Engine</description>

    <properties>
        <!-- Application -->
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- Plugins -->
        <dockerfile.plugin.version>1.4.10</dockerfile.plugin.version>
        <dockerfile.push.skip>false</dockerfile.push.skip>
        <dockerfile.build.skip>false</dockerfile.build.skip>

        <!-- Dependencies -->
        <spring.boot.version>2.3.0.RELEASE</spring.boot.version>
        <commons.io.version>2.6</commons.io.version>
    </properties>

    <build>
        <finalName>nightjar</finalName>

        <pluginManagement>
            <plugins>
                <!-- GitFlow Plugin -->
                <plugin>
                    <groupId>com.amashchenko.maven.plugin</groupId>
                    <artifactId>gitflow-maven-plugin</artifactId>
                    <version>${gitflow.plugin.version}</version>
                    <configuration>
                        <versionDigitToIncrement>1</versionDigitToIncrement>
                        <gitFlowConfig>
                            <productionBranch>master</productionBranch>
                            <developmentBranch>develop</developmentBranch>
                            <featureBranchPrefix>feature/</featureBranchPrefix>
                            <releaseBranchPrefix>release/</releaseBranchPrefix>
                            <hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
                            <supportBranchPrefix>support/</supportBranchPrefix>
                            <origin>origin</origin>
                        </gitFlowConfig>
                    </configuration>
                </plugin>

                <!-- Spring Boot Maven Plugin -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <includeSystemScope>true</includeSystemScope>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>development-local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <!-- Spotify Dockerfile Plugin -->
                        <plugin>
                            <groupId>com.spotify</groupId>
                            <artifactId>dockerfile-maven-plugin</artifactId>
                            <version>${dockerfile.plugin.version}</version>
                            <configuration>
                                <skip>true</skip>
                            </configuration>
                        </plugin>

                        <!-- Maven Deploy Plugin -->
                        <plugin>
                            <artifactId>maven-deploy-plugin</artifactId>
                            <configuration>
                                <skip>true</skip>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <id>development-ci</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <!-- Spotify Dockerfile Plugin -->
                        <plugin>
                            <groupId>com.spotify</groupId>
                            <artifactId>dockerfile-maven-plugin</artifactId>
                            <version>${dockerfile.plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>default</id>
                                    <goals>
                                        <goal>build</goal>
                                        <goal>push</goal>
                                    </goals>
                                </execution>
                            </executions>
                            <configuration>
                                <skip>${dockerfile.build.skip}</skip>
                                <repository>docker-registry.dev.navads.eu/nightjar</repository>
                                <buildArgs>
                                    <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                                </buildArgs>
                                <tag>snapshot</tag>
                                <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                            </configuration>
                        </plugin>

                        <!-- Maven Deploy Plugin -->
                        <plugin>
                            <artifactId>maven-deploy-plugin</artifactId>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <id>production</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <!-- Spotify Dockerfile Plugin -->
                        <plugin>
                            <groupId>com.spotify</groupId>
                            <artifactId>dockerfile-maven-plugin</artifactId>
                            <version>${dockerfile.plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>build-image</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>build</goal>
                                    </goals>
                                    <configuration>
                                        <classifier>docker-info-build</classifier>
                                    </configuration>
                                </execution>

                                <execution>
                                    <id>tag-image-version</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>tag</goal>
                                    </goals>
                                    <configuration>
                                        <classifier>docker-info-tag-version</classifier>
                                        <tag>${project.version}</tag>
                                    </configuration>
                                </execution>

                                <execution>
                                    <id>tag-image-latest</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>tag</goal>
                                    </goals>
                                    <configuration>
                                        <tag>latest</tag>
                                    </configuration>
                                </execution>

                                <execution>
                                    <id>push-image-version</id>
                                    <phase>deploy</phase>
                                    <goals>
                                        <goal>push</goal>
                                    </goals>
                                    <configuration>
                                        <tag>${project.version}</tag>
                                    </configuration>
                                </execution>

                                <execution>
                                    <id>push-image-latest</id>
                                    <phase>deploy</phase>
                                    <goals>
                                        <goal>push</goal>
                                    </goals>
                                    <configuration>
                                        <tag>latest</tag>
                                    </configuration>
                                </execution>
                            </executions>
                            <configuration>
                                <skip>${dockerfile.build.skip}</skip>
                                <repository>docker-registry.dev.navads.eu/nightjar</repository>
                                <buildArgs>
                                    <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                                </buildArgs>
                                <googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
                                <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                            </configuration>
                        </plugin>

                        <!-- Maven Deploy Plugin -->
                        <plugin>
                            <artifactId>maven-deploy-plugin</artifactId>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <id>custom-docker-tag</id>
            <properties>
                <docker.tag>stitch</docker.tag>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <!-- Spotify Dockerfile Plugin -->
                        <plugin>
                            <groupId>com.spotify</groupId>
                            <artifactId>dockerfile-maven-plugin</artifactId>
                            <version>${dockerfile.plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>default</id>
                                    <goals>
                                        <goal>build</goal>
                                        <goal>push</goal>
                                    </goals>
                                </execution>
                            </executions>

                            <configuration>
                                <skip>${dockerfile.build.skip}</skip>
                                <repository>docker-registry.dev.navads.eu/nightjar</repository>
                                <buildArgs>
                                    <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                                </buildArgs>
                                <tag>${docker.tag}</tag>
                                <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                            </configuration>
                        </plugin>

                        <!-- Maven Deploy Plugin -->
                        <plugin>
                            <artifactId>maven-deploy-plugin</artifactId>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

    </profiles>

    <dependencies>
        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Apache Commons Lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <!-- Apache Commons IO -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons.io.version}</version>
        </dependency>

        <!-- Logback -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>

        <!-- Postgres -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Flyway -->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>navads-releases</id>
            <url>https://maven.dev.navads.eu/repository/maven-releases/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>navads-snapshots</id>
            <url>https://maven.dev.navads.eu/repository/maven-snapshots/</url>
            <snapshots>
            </snapshots>
        </repository>
    </repositories>

    <distributionManagement>
        <snapshotRepository>
            <id>nexus-snapshots</id>
            <url>https://maven.dev.navads.eu/repository/maven-snapshots/</url>
        </snapshotRepository>

        <repository>
            <id>nexus</id>
            <url>https://maven.dev.navads.eu/repository/maven-releases/</url>
        </repository>
    </distributionManagement>

</project>
